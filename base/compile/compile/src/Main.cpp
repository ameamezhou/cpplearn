#include <iostream>

void Log(const char* message);

int main()
{
	Log("Hello World");
	std::cin.get();
}

// 这里知道程序是怎么编译的吗？  当我们直接build项目的时候  ./x64/Debug 目录下找到一个 main,exe
// 然后我们能在 .\compile\x64\Debug 目录下找到 Main.obj 和 log.obj
// 所以编译器所作的工作就是为我们的每一个C++文件生成这些obj文件
// 这些CPP文件被称为翻译单元，本质上你要理解，C++并不关心文件  C++ 中就不存在文件这个概念
// 比如说java你的类名必须和你的文件名称一样，你的文件夹层次需要和package一样，因为这是java的要求
// 但是C++不是这样的，没有所谓的文件，文件只是提供给编译器源代码的一种方式，你负责告诉编译器你输入的是什么类型的文件
// 以及编译器应该如何处理它 当然如果你创建一个文件.cpp 编译器就会把它当作c++文件，类似的我创建一个扩展名为.c 或者 .h 的文件
// 编译器会将.c文件当作c语言文件，而不是c++文件，.h文件当作头文件 这些都是编译器的默认设定 你也可以更改它，这不过是编译器处理它的方式
// 比如我想编译一个 .xiawuyue 的文件，你可以告诉编译器 请像编译C++文件一样编译它就行。请记住 文件没有意义
// 
// 上面说每个C++文件是一个编译单元，会被编译器编译成obj文件，但是实际上我们使用的时候的cpp文件会包含其他的cpp文件并组成一个大的cpp文件
// 这种情况下进行编译  编译器会把它当作一个基本单元然后得到一个obj文件  这里的意思就是 一个CPP文件并不一定等同于一个翻译单元
// 