#include <iostream>

int main()
{
    std::cout << "Hello World!\n" << std::endl;
    std::cin.get();
}

这是入门最基础的一段代码，但是也能有很多知识点

首先第一句： #include <iostream>
这个叫做预处理，在#符号后面的  都是预处理语句
编译器收到源文件后，一看到这条语句就先处理这些个预处理语句，这就是为什么叫预处理了
因为它在实际编译之前就已经被处理了
include 的含义是它需要找到一个文件在。这个例子中是需要找到一个叫做iostream的文件，然后导入该文件的所有内容，在c++中这些文件被叫做头文件。
（其实这里和import是一样的 就是导入）
后面再深入讨论头文件
我们需要iostream这个头文件是因为我们需要一个被调用的函数声明sd::out 可以让我们在终端打印东西

然后是main函数
main函数在C++中非常重要（哪个语言main函数不重要呢？）所有的c++程序都需要有main函数，main函数是程序的入口。当我们运行程序的时候，计算机就会从这个函数开始执行代码。当程序还在运行到时候计算机会逐行执行我们的代码。当然程序会终端或者改变执行顺序，这里就涉及到了控制语句或者是函数的调用。但主要的还是一行一行执行（妈的  记录这么详细干嘛）

了解函数的话会发现main函数的返回类型是int类型，然而我们并没有返回int，因为main函数特殊，如果我们不写return的话默认 return 0;

这个双箭头并没有特殊含义 叫做重载运算符，理解为一个函数。
也可以写成 std::cout.print("Hello World!\n").print(std::endl);
std::cin.get() 是等待我们输入 按下enter键表示输入结束

我们要怎样把一个main.cpp编译成一个可执行的二进制文件
有这几个步骤：
首先我们已经讲过了有个预处理语句，编译器会先处理这些语句，在这个例子中，编译器会将iostream文件内容全都包含进来，这里的意思是直接拷贝粘贴内容到代码文件中。
以后还有头文件的内容
现在只需要知道包含了iostream这个文件,我们就可以用 cout cin 这些函数了
当预处理语句处理完了之后，我们的文件会被编译，编译器会将我们写的所有的c++代码转化成实际的机器代码。这里有些非常重要的设置将决定我们怎么转化代码。

设置篇 ——-------------------------------------------
好的 让我们看下visual studio。
visual studio 上面编译选项有两个 debug - release   或者是 x64和x86
这些都是默认配置
x86对应的平台就是 windows 32 位  不同的平台的编译配置不同
具体配置根据我们开发的平台进行选择  可以在工程文件中进入属性界面进行修改
当然要注意  在我们设置 release 模式时，所有的更改都不会影响debug环境
=====================================================

当我们要编译项目时，所有被用到的cpp文件都会被编译，每一个cp文件都会被编译成一个 object file 目标文件
如果我们用vs，生成的文件就是.obj后缀的。当我们有了这些cpp编译后生成的obj文件后，我们需要把这些文件合并成一个可执行文件。这个时候就轮到 link 连接器登场了，基本上链接就算让所有的obj文件粘合到一起。合并成一个exe文件，这个过程有点复杂。具体看base下面的笔记