#include <iostream>

int main() {
	// 首先这里我们可以看到 main函数返回值为int类型，这就是c ++ 的一种变量的数据类型
	// 它能在我们给定的条件下存储一个整数，如果我们想声明一个变量可以：
	int variable = 9; // 这里可以不用立即给定它一个值  演示的时候我就直接给定一个9
	// 整数是传统上为四个字节的数据类型 数据类型的实际大小取决于编译器。不同的编译器会有所不同 由编译器来决定数据类型的大小
	// int数据类型的意思是在一定范围内存储整数
	// 因为他是四个字节大小 所以存储的数字被限定在一定范围内，由于它又是一个有符号的类型 所以它能储存的值是从 -2^31 --- 2^31
	// 粗略说就是正负2亿之间


	std::cout << variable << std::endl;
	variable = 20;
	std::cout << variable << std::endl;

	// 在c++中我们也有纯正数的数据类型   等同于golang中的uint
	unsigned int variableA = 10; // 现在就能表示 0-2^32 这个区间的所有数

	// 
	// char 1字节数据
	// short 2字节数据 
	// int  4字节数据
	// long 通常也是4字节的数据，这里具体取决于编译器
	// longlong  通常是8字节数据
	// 最基础的五个
	// unsigned 你可以加在任意一个数据类型前面  char这个类型你也可以直接给它分配字符
	char a = 64; // a = "A" 这里根据 Ascii 码 A就是65  char 是专门用来表示字符的
	// c++ 数据之间唯一的区别就是 创建变量时通过数据类型分配不同的内存  这个是最重要的
	// c++ 是没有很多规则限制你的  所以c++程序bug不会伤筋动骨  而是直接断手断脚
	// 
	// 如果我们想要存储 小数怎么办？
	// 这里我们也有两种数据类型
	// float 和 double
	// float 占用4字节数据
	// double 占用8字节数据
	//
	
	float FloatTest = 5.5f;
	// 鼠标悬停在上面看我们会发现实际上这里创建的是double
	// 我们要如何区分那些要用float 或者double类型的数据呢？
	double vart = 5.2;
	// 我们在需要限定用float类型的在后面加个 f/F
	//
	bool bolltest = true;
	// 这里就是bool类型 true or false 大小为 1bit 但是这里我们不能只创建1bit 因为我们还有一些寻址字节，如果只有1 bit
	// 我们不能访问  因为我们访问的最小单位为字节所以我们一个bool也要占用1字节  当然你也可以做一些不一样的事情，比如说在 1byte 里面存8个bool 可以有效的节约内存
	// 以后会继续学习高级有趣的技巧 
	//

	std::cout << a << std::endl;

	// 我们如何知道一个数据究竟多大？
	// 这里它依赖于编译器
	// 我们可以通过 sizeof这个函数来查一下
	//
	std::cout << sizeof(bool) << std::endl; // 这里sizeof可以不用括号  但是一般标准还是需要打上括号

	// 有了这些基础的变量类型之后  我们还有一些方法 将他们转化为“指针”或者“引用”
	// 
	//
	bool* zhizhen = false; // 指针
	bool& yinyong = nullptr; // 引用

	std::cin.get();
}