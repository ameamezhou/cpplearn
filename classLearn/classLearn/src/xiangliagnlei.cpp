// 类是什么  类只是对数据和功能组合在一起的一种方法
#include <iostream>

#define LOG(x) std::cout << x << std::endl;

// 我想做一种struct 把两个浮点数搞在一起 
// 从根本上来说不管是 class 还是 struct 都代表这两个浮点数的一种结构
// 它可以不用像 Player 那个类一样包含其他的功能
// 这个 Player 类它可能需要包含3d模型，移动，渲染代码，接收键盘输入 等等功能
// 而这里只是两个变量，方便我们代码中调用 
// 当然struct 也可以设置一些函数调用 比如我们增加一个名为add的方法
// 这里我们只是在处理这些变量  我们在这里只是讨论两个变量的变化
// 在设计上还是有一点不同的   因为还会涉及一些继承的场景，我们一般不会在struct 中使用继承
// 因为如果我要有一个完整的类层次结构或者说某种继承层次结构 我们直接使用类就好了
// 因为继承这里又是另外一种复杂的逻辑  我只希望我的结构体是数据的结构  仅此而已。
// 除此之外 你如果尝试混合结构体和类  比如一个叫做a的类和叫做b的结构体  这个b结构体继承自a 
// 一些编译器就会告警：告诉你你的结构体继承了一个类
//
struct Vec2
{
	float x, y;

	void add(const Vec2& other)
	{
		y += other.y;
		x += other.x;
	}
};

int main()
{
	
	std::cin.get();
}